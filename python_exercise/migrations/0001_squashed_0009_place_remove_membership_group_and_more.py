# Generated by Django 4.0.3 on 2022-04-02 14:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    replaces = [('python_exercise', '0001_initial'), ('python_exercise', '0002_exercise_author_create_exercise_author_update_and_more'), ('python_exercise', '0003_alter_exercise_options'), ('python_exercise', '0004_alter_exercise_options'), ('python_exercise', '0005_alter_tag_options'), ('python_exercise', '0006_category_complexity'), ('python_exercise', '0007_alter_category_options'), ('python_exercise', '0008_group_person_membership_group_members'), ('python_exercise', '0009_place_remove_membership_group_and_more')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Категория')),
                ('slug', models.SlugField(max_length=255, verbose_name='URL')),
                ('complexity', models.IntegerField(default=1, verbose_name='Сложность')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'ordering': ('id',),
                'permissions': (('can_set', 'can set'),),
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название тега')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'Тег',
                'verbose_name_plural': 'Теги',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название задачи')),
                ('task_text', models.TextField(verbose_name='Текст задачи')),
                ('is_published', models.BooleanField(default=True, verbose_name='Публикация')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время создания')),
                ('time_update', models.DateTimeField(auto_now=True, verbose_name='Дата и время изменения')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='python_exercise.category', verbose_name='Категория')),
                ('tag', models.ManyToManyField(blank=True, to='python_exercise.tag', verbose_name='Тег')),
                ('author_create', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Автор создания')),
                ('author_update', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_update', to=settings.AUTH_USER_MODEL, verbose_name='Автор последних изменений')),
            ],
            options={
                'verbose_name': 'Задача',
                'verbose_name_plural': 'Задачи',
                'ordering': ('-time_update',),
            },
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('address', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('place_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='python_exercise.place')),
                ('serves_hot_dogs', models.BooleanField(default=False)),
                ('serves_pizza', models.BooleanField(default=False)),
            ],
            bases=('python_exercise.place',),
        ),
    ]
